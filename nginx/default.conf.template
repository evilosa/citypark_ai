# Caches information about open FDs, freqently accessed files.
open_file_cache max=1000 inactive=20s; 
open_file_cache_valid 30s; 
open_file_cache_min_uses 2;
open_file_cache_errors on;

# Disable access log altogether.
access_log off;

# Allow the server to close the connection after a client stops responding. 
reset_timedout_connection on;

# Send the client a "request timed out" if the body is not loaded by this time.
client_body_timeout 10;

client_max_body_size 32m;

# If the client stops reading data, free up the stale client connection after this much time.
send_timeout 2;

# Compression.
gzip on;
gzip_min_length 100;
gzip_proxied expired no-cache no-store private auth;
gzip_types
    text/css
    text/javascript
    text/xml
    text/plain
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    image/svg+xml;
gzip_disable "msie6";

server {
  listen 80;
  # API Proxy
  location ${API_PLACEHOLDER}/ {
    proxy_pass         ${BACKEND_GATEWAY}${API_PLACEHOLDER}/;
    proxy_http_version 1.1;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-NginX-Proxy    true;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # API OneC Proxy
  location ${API_ONEC_PLACEHOLDER}/ {
    proxy_pass         ${ONEC_GATEWAY}${API_ONEC_PLACEHOLDER}/;
    proxy_http_version 1.1;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-NginX-Proxy    true;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # Uploads Proxy
  location ${UPLOADS_PLACEHOLDER}/ {
    proxy_pass         ${BACKEND_GATEWAY}${UPLOADS_PLACEHOLDER}/;
    proxy_http_version 1.1;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-NginX-Proxy    true;
    proxy_set_header Host ${HOST};
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}